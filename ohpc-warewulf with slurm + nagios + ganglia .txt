Reference Help Link: https://github.com/dasandata/Open_HPC/blob/master/Provisioning/OpenHPC%20Cluster%20Building%20(v1.3.9-CentOS7.7%20Base%20OS).md
___________________

Create one Master VM with two Network adapters (ens33[NAT],ens36[Host-only for cluster communication])
 x86 -> Processor : 4  RAM - 8GB  Secondary Storage - 100 GB
------------------------------------------------------------
Warewulf installation (Network Boot in HPC Cluster) Centos-7
____________________________________________________________

Pre-requisite:
_____________

We have to stop and disable firewall and disable selinux 

sethostname of machine as master

# hostnamectl set-hostname master

_________________________________________________________

Check for the file of ens36   (if not there use #nmtui command and edit Wired Connection 1 to ens36)

# cat /etc/sysconfig/network-scripts/ifcfg-ens36

# ifconfig ens36 

		Output -> ens36:192.168.23.130  

# vi /etc/hosts
	-> edit -> 192.168.23.130	master

# yum -y install yum-utils

# yum install http://build.openhpc.community/OpenHPC:/1.3/CentOS_7/x86_64/ohpc-release-1.3-1.el7.x86_64.rpm

# yum repolist

# yum -y install ohpc-base

# yum -y install ohpc-warewulf

# yum -y install chrony

# vi /etc/chrony.conf

	-> Edit this Conf. file -> server 192.168.23.130 iburst
					-> allow 192.168.23.0/24 (uncomment and edit network address)
					-> local stratum 10  (uncomment)
					-> SAVE and Exit

# systemctl start chronyd

# systemctl enable chronyd

# yum install ntpdate

# ntpdate -q 192.168.23.130

# vi /etc/warewulf/provision.conf

 	edit -> change network device = ens36

# grep device /etc/warewulf/provision.conf

# vi /etc/xinetd.d/tftp

  	edit -> disable = no

# grep disable /etc/xinetd.d/tftp


**************************************************
Resource Manager Installation
__________________________________________________


# yum -y install ohpc-slurm-server

# yum -y install slurm-sview-ohpc slurm-torque-ohpc

# vi /etc/slurm/slurm.conf

	edit -> ClusterName=pearl
           -> ControlMachine=master
	     -> NodeName=c[1-2]
	     -> Nodes=c[1-2]                    --> This is my nodename

# grep NodeName= /etc/slurm/slurm.conf

# echo ens36

# ifconfig ens36


# systemctl restart xinetd
# systemctl enable mariadb.service
# systemctl restart mariadb
# systemctl enable httpd.service
# systemctl restart httpd
# systemctl enable dhcpd.service


***************************************************

# echo ${CHROOT}

# export CHROOT=/opt/ohpc/admin/images/centos7.7

# echo ${CHROOT}

# wwmkchroot centos-7 $CHROOT                             -> Building initial BOS image

# uname -r

# chroot ${CHROOT} uname -r

***************************************************
# yum -y --installroot=${CHROOT} update

# yum -y --installroot=${CHROOT} install \
 ohpc-base-compute kernel kernel-headers kernel-devel kernel-tools parted \
 xfsprogs python-devel yum htop ipmitool glibc* perl perl-CPAN perl-CPAN \
 sysstat gcc make xauth firefox squashfs-tools

# cat /etc/resolv.conf

# vi /etc/resolv.conf

	add -> master 192.168.23.130

# cp -p /etc/resolv.conf $CHROOT/etc/resolv.conf

# yum -y --installroot=${CHROOT} install ohpc-slurm-client

# chroot ${CHROOT} systemctl enable slurmd

# yum -y --installroot=$CHROOT install chrony

# yum -y --installroot=$CHROOT install kernel lmod-ohpc

*****************************************************

# # Initialize warewulf database and ssh_keys
_____________________________________________________

# wwinit database

# wwinit ssh_keys

# df -hT | grep -v tmpfs


# hostname

# cat  ${CHROOT}/etc/fstab

# echo "master:/home /home nfs nfsvers=3,nodev,nosuid 0 0" >> $CHROOT/etc/fstab

# echo "master:/opt/ohpc/pub /opt/ohpc/pub nfs nfsvers=3,nodev 0 0" >> $CHROOT/etc/fstab

# cat  ${CHROOT}/etc/fstab

# cat /etc/exports

# echo "/home *(rw,no_subtree_check,fsid=10,no_root_squash)" >> /etc/exports

# echo "/opt/ohpc/pub *(ro,no_subtree_check,fsid=11)" >> /etc/exports

# cat /etc/exports

# systemctl start nfs-server

# systemctl status nfs-server

# systemctl enable nfs-server

# exportfs -arv

# chroot $CHROOT systemctl enable chronyd

# echo "server 192.168.23.130 iburst" >> $CHROOT/etc/chrony.conf

****************************************************

 Add Ganglia monitoring
_________________________

# yum -y install ohpc-ganglia						->	# Install Ganglia meta-package on master

# yum -y --installroot=${CHROOT} install ganglia-gmond-ohpc			->	Install Ganglia compute node daemon

# Use example configuration script to enable unicast receiver on master host
-----------------------------------------------------------------------------

# cp /opt/ohpc/pub/examples/ganglia/gmond.conf /etc/ganglia/gmond.conf    -> yes

# grep 'host =' /etc/ganglia/gmond.conf

# sed -i "s/<sms>/master/" /etc/ganglia/gmond.conf

# grep 'host ='  /etc/ganglia/gmond.conf

# grep OpenHPC /etc/ganglia/gmond.conf

# sed -i "s/OpenHPC/pearl/" /etc/ganglia/gmond.conf

# grep pearl /etc/ganglia/gmond.conf

# cp /etc/ganglia/gmond.conf $CHROOT/etc/ganglia/gmond.conf      -> yes 

# echo "gridname pearl" >> /etc/ganglia/gmetad.conf

# grep gridname /etc/ganglia/gmetad.conf

# echo "
systemctl enable gmond
systemctl enable gmetad
systemctl start gmond
systemctl start gmetad
chroot ${CHROOT} systemctl enable gmond
" > /tmp/start_ganglia_service.sh

# bash /tmp/start_ganglia_service.sh

# grep "^date.timezone =" /etc/php.ini

# echo "date.timezone = Asia/Kolkata" >> /etc/php.ini

# grep "^date.timezone =" /etc/php.ini

# systemctl try-restart httpd


Go to browser :  http://master/ganglia

****************************************************
Add Nagios monitoring
____________________________________________________

# yum -y install ohpc-nagios   -> Install Nagios meta-package on master host

# yum -y --installroot=$CHROOT install nagios-plugins-all-ohpc nrpe-ohpc      -> Install plugins into compute node image

# chroot $CHROOT systemctl enable nrpe

# touch /var/log/nagios/nrpe.pid

# chown -R nrpe:nrpe /var/log/nagios/nrpe.pid

# perl -pi -e "s/^allowed_hosts=/# allowed_hosts=/" $CHROOT/etc/nagios/nrpe.cfg

# echo "nrpe 5666/tcp # NRPE" >> $CHROOT/etc/services

# echo "nrpe : 192.168.23.130 : ALLOW" >> $CHROOT/etc/hosts.allow

# echo "nrpe : ALL : DENY" >> $CHROOT/etc/hosts.allow

# chroot $CHROOT /usr/sbin/useradd -c "NRPE user for the NRPE service" -d /var/run/nrpe \
-r -g nrpe -s /sbin/nologin nrpe

# chroot $CHROOT /usr/sbin/groupadd -r nrpe

****

# # Configure remote services to test on compute nodes
------------------------------------------------------

# mv /etc/nagios/conf.d/services.cfg.example /etc/nagios/conf.d/services.cfg

# mv /etc/nagios/conf.d/hosts.cfg.example /etc/nagios/conf.d/hosts.cfg

# for ((i=0; i<2; i++)) ; do perl -pi -e "s/HOSTNAME$(($i+1))/${c[$i]}/ || s/HOST$(($i+1))_IP/${c_ip[$i]}/" /etc/nagios/conf.d/hosts.cfg; done

# perl -pi -e "s/ \/bin\/mail/ \/usr\/bin\/mailx/g" /etc/nagios/objects/commands.cfg

# perl -pi -e "s/nagios\@localhost/root\@master/" /etc/nagios/objects/contacts.cfg

# echo command[check_ssh]=/usr/lib64/nagios/plugins/check_ssh localhost >> $CHROOT/etc/nagios/nrpe.cfg

# htpasswd -bc /etc/nagios/passwd nagiosadmin nagios       -> username : nagiosadmin   |    password: nagios

# chkconfig nagios on

# vi /etc/nagios/conf.d/hosts.cfg   -> Add clients and hostname 

# systemctl start nagios

# chmod u+s `which ping`


Go to browser : http://master/nagios

	username : nagiosadmin
	password : nagios
		   


****************************************************

# wwsh file list

# wwsh file import /etc/passwd

# wwsh file import /etc/group

# wwsh file import /etc/shadow

# wwsh file list


# export WW_CONF=/etc/warewulf/bootstrap.conf

# echo "drivers += updates/kernel/" >> $WW_CONF

# echo "modprobe += ahci, nvme" >> $WW_CONF

# echo "drivers += overlay" >> $WW_CONF




# wwbootstrap `uname -r`

# echo ${CHROOT}

# wwvnfs --chroot $CHROOT
or
# wwvnfs --chroot /opt/ohpc/admin/images/centos7.7

# wwsh vnfs list


**************

# echo "GATEWAYDEV=ens36" > /tmp/network.wwsh

# wwsh -y file import /tmp/network.wwsh --name network

# wwsh -y file set network --path /etc/sysconfig/network --mode=0644 --uid=0

# wwsh node new c1

# wwsh node set c1 --netdev ens36 --ipaddr=192.168.23.150 --hwaddr=00:0C:29:EC:16:C2 --netmask=255.255.255.0 --gateway 192.168.23.130

# wwsh node new c2

# wwsh node set c2 --netdev ens36 --ipaddr=192.168.23.151 --hwaddr=00:0C:29:B4:A4:C4 --netmask=255.255.255.0 --gateway 192.168.23.130
______________________________________________________________________________________________________________________________________


# wwsh node list

# wwsh -y provision set c1 --vnfs=centos7.7 --bootstrap=`uname -r` --files=dynamic_hosts,passwd,group,shadow,network

# wwsh -y provision set c2 --vnfs=centos7.7 --bootstrap=`uname -r` --files=dynamic_hosts,passwd,group,shadow,network

# systemctl restart dhcpd && wwsh pxe update















Script : For Restart/enable relevant services to support provisioning
---------------------------------------------------------------------
echo "
systemctl enable  dhcpd
systemctl restart xinetd
systemctl enable  mariadb
systemctl restart mariadb
systemctl enable  httpd
systemctl restart httpd
" > /tmp/provisioning_service_run.sh

bash /tmp/provisioning_service_run.sh



